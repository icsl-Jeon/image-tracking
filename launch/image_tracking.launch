<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="mav_name" default="firefly"/>
  <arg name="world_name" default="image_tracking"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />  
  
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
     <!-- world generation -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <arg name="paused" value="true"/>
    <arg name="gui" value="false"/> 
  </include>
    
    <!--octomap_server -->
  
  <include file="$(find octomap_server)/launch/octomap_tracking_server.launch">
    <arg name="world_name" value="world" />
    <arg name="mav_name" value="$(arg mav_name)"/>
    <arg name="resolution" value="0.1"/>
    <arg name="max_range" value="4.0"/>
  </include>
  
  
   <!-- group name/model spawn -->
    <group ns="$(arg mav_name)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_with_vi_sensor.gazebo"/>
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
    </include>
    
    
    <!--keyboard interface -->
    <node name="waypoint_publisher_from_key" pkg="image_tracking" type="waypoint_publisher_from_key" output="screen"/>

    <node name="keypress_interface" pkg="image_tracking" type="keypress.py" output="screen" launch-prefix="xterm -e"/>

	<!--state_publisher-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    
	<!--controller-->
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    

  </group>

	<!-- waypoint proposal -->
  <group ns="waypoint_proposal">
	<node name="proposer" pkg="image_tracking" type="waypoint_proposal_from_octomap_node" output="screen">
	<param name="track_d" type="double" value="2.0"/>
	<param name="elev_min" type="double" value="$(eval 3.141592/6.0)"/>
	<param name="N_azim" type="int" value="10"/>
	<param name="N_elev" type="int" value="6"/>
	</node>
  </group>

  <!--rviz-->
  <node name="rviz" pkg="rviz" type="rviz" args="args=-d $(find image_tracking)/rviz/image_tracking.rviz"/>

</launch>
