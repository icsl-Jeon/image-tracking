<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="mav_name" default="firefly"/>
  <arg name="world_name" default="image_tracking3"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />  
  
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
     <!-- world generation -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <arg name="paused" value="true"/>
    <arg name="gui" value="false"/> 
    
  </include>
    
    
    
    <!--octomap_server -->
  
  <include file="$(find octomap_server)/launch/octomap_tracking_server.launch">
    <arg name="world_name" value="world" />
    <arg name="mav_name" value="$(arg mav_name)"/>
    <arg name="resolution" value="0.2"/>
    <arg name="max_range" value="10.0"/>
    <arg name="height_map" value="false"/>
	<arg name="color_g" value="0.8"/>
 <!--   
	<arg name="sensor_miss" value="0.1"/>
    <arg name="sensor_hit" value="0.9"/>
 -->
 </include>
  
  
  <!-- target spawn -->
  <group ns ="target">
  <include file="$(find turtlebot_gazebo)/launch/includes/kobuki.launch.xml">
    <arg name="base" value="kobuki"/>
    <arg name="stacks" value="hexagons"/>
    <arg name="robot_name" value="target"/>	 
    <arg name="3d_sensor" value="kinect"/>
    <arg name="init_pose" value="-x 2.5 -y 0.5"/>
  </include>
  
  	<!-- keyboard control-->
  <node pkg="turtlebot_teleop" type="turtlebot_teleop_key" name="turtlebot_teleop_keyboard"  output="screen" launch-prefix="xterm -e">
    <param name="scale_linear" value="0.5" type="double"/>
    <param name="scale_angular" value="1.5" type="double"/>
    <remap from="turtlebot_teleop_keyboard/cmd_vel" to="cmd_vel_mux/input/teleop"/>
  </node>
  
  </group>
  
  <!-- setting tf a fixed frame to base tf -->
  
  <node name="tf_mapper_from_world_to_target" pkg="adding_fixed_tf_gazebo" type="adding_fixed_tf_gazebo_node">
  	<param name="fixed_tf_name" value="world"/>
  	<param name="odom_tf_name" value="target"/>
  
  </node>
  
  
   <!-- group name/model spawn -->
    <group ns="$(arg mav_name)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_with_vi_sensor.gazebo"/>
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
    </include>
    
    
    <!--keyboard interface -->
    <!--node name="waypoint_publisher_from_key" pkg="image_tracking" type="waypoint_publisher_from_key" output="screen"/>

    <node name="keypress_interface" pkg="image_tracking" type="keypress.py" output="screen" launch-prefix="xterm -e"/>
-->
	<!--state_publisher-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    
	<!--controller-->
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    

  </group>

	<!-- waypoint proposal -->
  <group ns="waypoint_proposal">
	<node name="proposer" pkg="image_tracking" type="waypoint_proposal_from_octomap_node" output="screen">
	<param name="track_d" type="double" value="4.0"/>
	<param name="elev_min" type="double" value="$(eval 3.141592/8.0)"/>
	<param name="elev_max" type="double" value="$(eval 3.141592/4.0)"/>
	<param name="N_azim" type="int" value="16"/>
	<param name="N_elev" type="int" value="10"/>
	<param name="xy_length_target" type="double" value="1.4"/>
	<param name="z_min_target" type="double" value="-0.5"/>
	<param name="z_max_target" type="double" value="0.8"/>
	<param name="target_name" type="string" value="target"/>
	<param name="tracker_name" type="string" value="$(arg mav_name)"/>
	<param name="w_v" type="double" value="3"/> <!--visibility cost weight-->
	<param name="w_d" type="double" value="0.6"/> <!--tracking_distance cost weight-->
	</node>
  </group>

  <!--rviz-->
  <node name="rviz" pkg="rviz" type="rviz" args="args=-d $(find image_tracking)/rviz/image_tracking.rviz"/>

</launch>
